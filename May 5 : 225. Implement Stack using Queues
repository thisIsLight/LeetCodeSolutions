public class MyStack {

    private Queue<int> qu1 = new Queue<int>();
    private Queue<int> qu2 = new Queue<int>();

    
    public MyStack() {
    }
    
    public void Push(int x) {
        if(qu1.Count == 0 && qu2.Count == 0){
            qu1.Enqueue(x);
        }
        else if(qu1.Count > 0){
            qu1.Enqueue(x);
        }
        else{
            qu2.Enqueue(x);
        }
        
    }
    
    public int Pop() {
        if(qu1.Count > 0){
            while(qu1.Count > 1){
                var temp = qu1.Dequeue();
                qu2.Enqueue(temp);
            }
            return qu1.Dequeue();
        }
        else if(qu2.Count > 0){
            while(qu2.Count > 1){
                var temp = qu2.Dequeue();
                qu1.Enqueue(temp);
            }
            return qu2.Dequeue();
        }
        else{
            return 0;
        }
    }
    
    public int Top() {
        if(qu1.Count > 0){
            return qu1.ElementAt(qu1.Count-1);
        }
        else if(qu2.Count > 0){
            return qu2.ElementAt(qu2.Count-1);
        }
        else{
            return 0;
        }
    }
    
    public bool Empty() {
        if(qu1.Count == 0 && qu2.Count == 0){
            return true;
        }
        else{
            return false;
        }
    }
}

/**
 * Your MyStack object will be instantiated and called as such:
 * MyStack obj = new MyStack();
 * obj.Push(x);
 * int param_2 = obj.Pop();
 * int param_3 = obj.Top();
 * bool param_4 = obj.Empty();
 */
